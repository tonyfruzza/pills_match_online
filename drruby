#!/usr/bin/env ruby
require 'ruby2d'
require './lib/defs.rb'
require './lib/game_field.rb'
require './lib/producer.rb'
require './lib/consumer.rb'
require './lib/pill.rb'
require './lib/connect_four.rb'
require './lib/viruses.rb'

set title: 'DrRuby'
$paused = false

@gf = GameField.new
@cf = ConnectFour.new(@gf)
if ENABLE_MULTI_PLAY
  @producer = Producer.new
  @consumer = Consumer.new
  @consumer.handle_consuming
end
@viruses = Viruses.new(@gf)
@pill = Pill.new(@gf)
@key_repeats = 0
@key_rotate_repeats = 0
@key_down_repeats = 0
@in_drop_state = false
@in_drop_state_count = 0

on :key_up do |k|
  key = k['key']
  case key
  when 'left'
    @key_repeats = 0
  when 'right'
    @key_repeats = 0
  when 'down'
    @key_down_repeats = 0
  when 'up'
    @key_rotate_repeats = 0
  end
end

on :key_held do |k|
  key = k['key']

  case key
  when 'left'
    @pill.move_left if @key_repeats == 0
    @key_repeats += 1
    @key_repeats = 0 if @key_repeats == KEY_TIME_REPEAT
  when 'right'
    @pill.move_right if @key_repeats == 0
    @key_repeats += 1
    @key_repeats = 0 if @key_repeats == KEY_TIME_REPEAT
  when 'up'
    @pill.rotate if @key_rotate_repeats == 0
    @key_rotate_repeats += 1
    @key_rotate_repeats = 0 if @key_rotate_repeats == KEY_TIME_REPEAT
  when 'down'
    @pill.move_down if @key_down_repeats == 0
    @key_down_repeats += 1
    @key_down_repeats = 0 if @key_down_repeats == KEY_TIME_REPEAT_FOR_DOWN
  end
end

on :key_down do |k|
  key = k['key']
  case key
  when 'space'
    clear
  when 'backspace'
    close
  when 'p'
    $paused = true
  when 's'
    $paused = false
  else
  end
end
#
# @text = Text.new(
#   0,
#   x: get(:width) / 2 - 100,
#   y: 5,
#   font: 'assets/Arial.ttf',
#   color: 'gray',
#   size: 40
# )


tick = 0
update do
  # set background: 'random'
  next if $paused
  if tick % DROP_TICKS == 0
    # Hit bottom
    if @pill.move_down == FCS_OCUPIED
      @gf.commit_pill(@pill)
      in_drop_state = @cf.perform_clear_iteration
      # Reset
      @pill = Pill.new(@gf)
      @key_repeats = 0
    end
  end

  @producer.send_game_field_state(@gf.game_field_map) if tick % TICKS_TO_SEND_SCREEN_STATE == 0 && ENABLE_MULTI_PLAY
  tick += 1
end

show
